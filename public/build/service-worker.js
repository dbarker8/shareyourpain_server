"use strict";var precacheConfig=[["/index.html","8c7f569376084227d2816dc83d65750e"],["/static/css/main.0aa90b85.css","3784291b565d11abe52768bb206479d1"],["/static/js/main.b26184cd.js","d2b0990a6643752ea8bf697503ae1a87"],["/static/media/Simple-Line-Icons.0cb0b9c5.woff2","0cb0b9c589c0624c9c78dd3d83e946f6"],["/static/media/Simple-Line-Icons.2fe2efe6.svg","2fe2efe63441d830b1acd106c1fe8734"],["/static/media/Simple-Line-Icons.78f07e2c.woff","78f07e2c2a535c26ef21d95e41bd7175"],["/static/media/Simple-Line-Icons.d2285965.ttf","d2285965fe34b05465047401b8595dd0"],["/static/media/Simple-Line-Icons.f33df365.eot","f33df365d6d0255b586f2920355e94d7"],["/static/media/app-store-badge.1cfd5dba.svg","1cfd5dba4a9210bcf77f5dbe48ec2e66"],["/static/media/bg-pattern3.28359df2.png","28359df250103599e9feb9ce7026dace"],["/static/media/google-play-badge.cfea2442.svg","cfea2442b66fe18c84e0f51c29486192"],["/static/media/iphone_6_land_black.6ca71745.png","6ca71745c1ce3e4b0ca33740afe159fa"],["/static/media/iphone_6_land_gold.633e2b15.png","633e2b154c400e9a9cfcc568ddaafdb0"],["/static/media/iphone_6_land_white.aa01efc5.png","aa01efc5702705ce5a695da66aed8faf"],["/static/media/iphone_6_port_black.ae61d785.png","ae61d78586a588605a71f0f58f9e2760"],["/static/media/iphone_6_port_gold.673d810a.png","673d810a0ec7218572346bf8bd3b8d90"],["/static/media/iphone_6_port_white.d4956eac.png","d4956eac0ce11c5df72ab79fb58815b9"],["/static/media/logo-header.72d765e8.png","72d765e84c080d3beb7e8a50b7acf805"],["/static/media/screenshot_1.88c002db.png","88c002dbe5db986f651f97f1b8b3893b"],["/static/media/screenshot_2.aa4aee81.png","aa4aee812f57242f39871b814f827675"],["/static/media/silver.845604f7.png","845604f7ac5c5d44155d61484944ca07"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});